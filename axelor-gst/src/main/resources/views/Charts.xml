<?xml version="1.0" encoding="UTF-8"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_4.0.xsd">
	<chart name="chart-state" title="Party By State">
		<dataset type="sql">
	<![CDATA[
	 	
	 	SELECT gs.name as state, COUNT(partner.name) as pname
	 	FROM base_partner as partner
	 	LEFT JOIN base_partner_address as pa ON partner.id=pa.partner
	 	LEFT JOIN base_address as ba ON ba.id = pa.address
	 	LEFT JOIN gst_state as gs ON ba.state = gs.id
	 	WHERE partner.is_customer = 't'
	 	GROUP BY gs.name
	 		
	]]>		
	</dataset>
		<category key="state" title="State" />
		<series key="pname" type="pie" title="Pname" />
	</chart>

	<chart name="chart-UnpaidInvoices" title="Party By UnpaidInvoices" onInit="action-charts-record-chart-UnpaidInvoices-on-init">

		<search-fields>
			<field type="date" name="fromDate" title="From Date" />
			<field type="date" name="toDate" title="To Date" />
		</search-fields>
		<dataset type="sql">
	<![CDATA[
	 SELECT agp.name as name ,COUNT(ai.status_select) as status
	 FROM account_invoice as ai
	 LEFT JOIN base_partner as agp ON ai.partner = agp.id
	 WHERE 
		(ai.status_select != '3' OR ai.status_select != '4') AND
		DATE(ai.created_on) BETWEEN DATE(:fromDate) AND DATE(:toDate)
	GROUP BY agp.name
	]]>
	</dataset>
		<category key="name" title="Party Name" />
		<series key="status" groupBy="name" type="bar" title="Status" />
	</chart>

	<action-record name="action-charts-record-chart-UnpaidInvoices-on-init" model="com.axelor.apps.account.db.Invoice">
		<field name="fromDate" expr="eval:__date__.withDayOfMonth(1)" />
		<field name="toDate" expr="eval:__date__" />
	</action-record>

	<chart name="chart-PaidInvoices" title="Paid Invoices pre category pre product" onInit="action-charts-record-chart-UnpaidInvoices-on-init">
		<search-fields>
			<field type="date" name="fromDate" title="From Date" />
			<field type="date" name="toDate" title="To Date" />
		</search-fields>
		<dataset type="sql">
	<![CDATA[
		
		SELECT pb.name as product ,COUNT(ai.status_select) as status,pbc.name as category
	 	FROM account_invoice as ai
	 	LEFT JOIN account_invoice_line  as ail ON ail.invoice = ai.id
	 	LEFT JOIN base_product pb ON ail.product=pb.id
	 	LEFT JOIN base_product_category as pbc ON pb.product_category  = pbc.id
	 	WHERE 
		ai.status_select = '3'  AND
		DATE(ai.created_on) BETWEEN DATE(:fromDate) AND DATE(:toDate)
		GROUP BY pb.name,pbc.name
	]]>
	</dataset>
		<category key="product" title="Product" />
		<series key="status" groupBy="category" type="bar" title="Status" />
	</chart>

	<chart name="chart-InvoicePerStatus" title="Invoice Per Status">
		<dataset type="sql">
	<![CDATA[
		
		SELECT ai.status_select as status ,SUM(ai.in_tax_total) as ammount
	 	FROM account_invoice as ai
		GROUP BY ai.status_select
		
	]]>
	</dataset>
		<category key="status" title="status" />
		<series key="amount" groupBy="status" type="bar" title="Amount" />
	</chart>

	<chart name="chart-InvoicePerStatusInvoiceLine" title="Invoice Per Status Pre Invoice Line">
		<dataset type="sql">
	<![CDATA[
					
		SELECT ai.status_select as status ,COUNT(ai.id) as invoiceline
	 	FROM account_invoice as ai
		GROUP BY ai.status_select
	]]>
	</dataset>
		<category key="invoiceline" title="status" type="text" />
		<series key="invoiceline" groupBy="status" type="line" title="InvoiceLine" />
	</chart>

</object-views>